[
  {
    "id": "TC001",
    "title": "Authentication: Successful login for Matrix user",
    "description": "Verify that a matrix (headquarters) user can successfully log into the system with valid credentials and is redirected to the matrix dashboard.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the login page"
      },
      {
        "type": "action",
        "description": "Input valid matrix user username/email and password"
      },
      {
        "type": "action",
        "description": "Click the login button"
      },
      {
        "type": "assertion",
        "description": "Verify that login is successful and user is redirected to the matrix dashboard with correct KPIs and permissions"
      }
    ]
  },
  {
    "id": "TC002",
    "title": "Authentication: Successful login for Unit (Franchise) user",
    "description": "Verify that a unit user can successfully log into the system with valid credentials and is redirected to the unit dashboard.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the login page"
      },
      {
        "type": "action",
        "description": "Input valid unit user username/email and password"
      },
      {
        "type": "action",
        "description": "Click the login button"
      },
      {
        "type": "assertion",
        "description": "Verify that login is successful and user is redirected to the unit dashboard with correct KPIs and permissions"
      }
    ]
  },
  {
    "id": "TC003",
    "title": "Authentication: Failed login with invalid credentials",
    "description": "Verify that login fails with incorrect username or password and appropriate error message is displayed.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the login page"
      },
      {
        "type": "action",
        "description": "Input invalid username/email and/or password"
      },
      {
        "type": "action",
        "description": "Click the login button"
      },
      {
        "type": "assertion",
        "description": "Verify that login fails with an error message indicating invalid credentials"
      }
    ]
  },
  {
    "id": "TC004",
    "title": "Authentication: Role-based access enforcement",
    "description": "Verify that users cannot access routes or pages not permitted to their role (matrix or unit), and are redirected or denied access.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Login as unit user"
      },
      {
        "type": "action",
        "description": "Attempt to navigate to a matrix-only page (e.g. plan management or admin panel)"
      },
      {
        "type": "assertion",
        "description": "Verify that access is denied or user is redirected appropriately"
      },
      {
        "type": "action",
        "description": "Login as matrix user"
      },
      {
        "type": "action",
        "description": "Attempt to navigate to a unit-only page (e.g. local beneficiary management)"
      },
      {
        "type": "assertion",
        "description": "Verify that access is denied or user is redirected appropriately"
      }
    ]
  },
  {
    "id": "TC005",
    "title": "Dashboard: Matrix dashboard displays correct KPIs and updates data",
    "description": "Verify that the matrix dashboard loads correctly with operational and financial KPIs, charts, and updates interactively with latest data.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Login as matrix user"
      },
      {
        "type": "action",
        "description": "Navigate to matrix dashboard"
      },
      {
        "type": "assertion",
        "description": "Verify that KPIs such as health plan enrollments, cancellations, financial figures, and franchise statuses are displayed correctly"
      },
      {
        "type": "action",
        "description": "Trigger data changes (e.g., new enrolment) and refresh dashboard"
      },
      {
        "type": "assertion",
        "description": "Verify dashboard updates reflect the new data correctly and charts are interactive"
      }
    ]
  },
  {
    "id": "TC006",
    "title": "Dashboard: Unit dashboard shows local operations metrics",
    "description": "Verify that unit dashboard shows KPIs related to local beneficiaries, enrollments, cancellations, and course progress.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Login as unit user"
      },
      {
        "type": "action",
        "description": "Navigate to unit dashboard"
      },
      {
        "type": "assertion",
        "description": "Verify that local KPIs for beneficiary counts, plan statuses, course completions, and payments are displayed correctly"
      }
    ]
  },
  {
    "id": "TC007",
    "title": "Health Plan Management: Enrollment workflow for unit user",
    "description": "Test the full flow of enrolling a beneficiary in a health plan from the unit interface, including validation and audit trail creation.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Login as unit user"
      },
      {
        "type": "action",
        "description": "Navigate to the health plan enrollment page"
      },
      {
        "type": "action",
        "description": "Input valid beneficiary information and select a health plan"
      },
      {
        "type": "action",
        "description": "Submit the enrollment request"
      },
      {
        "type": "assertion",
        "description": "Verify enrollment is successful, beneficiary appears in the system, and audit log entry is created"
      }
    ]
  },
  {
    "id": "TC008",
    "title": "Health Plan Management: Enrollment fails with invalid data",
    "description": "Verify that enrolling a beneficiary with missing or invalid data is prevented with appropriate validation messages.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Login as unit user"
      },
      {
        "type": "action",
        "description": "Navigate to health plan enrollment page"
      },
      {
        "type": "action",
        "description": "Input incomplete beneficiary data (e.g., missing required fields)"
      },
      {
        "type": "action",
        "description": "Attempt to submit the enrollment"
      },
      {
        "type": "assertion",
        "description": "Verify that submission is blocked and relevant validation errors are displayed"
      }
    ]
  },
  {
    "id": "TC009",
    "title": "Health Plan Management: Batch import functionality",
    "description": "Validate batch import of beneficiary enrollments, including file validation, error reporting for invalid records, and successful import of valid data.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Login as matrix user"
      },
      {
        "type": "action",
        "description": "Navigate to batch import page"
      },
      {
        "type": "action",
        "description": "Upload a batch file with both valid and invalid beneficiary records"
      },
      {
        "type": "action",
        "description": "Start import process"
      },
      {
        "type": "assertion",
        "description": "Verify valid records are imported successfully and invalid ones are reported clearly with reasons"
      }
    ]
  },
  {
    "id": "TC010",
    "title": "Health Plan Management: Google Sheets integration for beneficiary data",
    "description": "Verify synchronization and data integrity between the system and Google Sheets integration for beneficiary records.",
    "category": "integration",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Login as matrix user"
      },
      {
        "type": "action",
        "description": "Access the Google Sheets integration tab"
      },
      {
        "type": "action",
        "description": "Trigger synchronization with a linked Google Sheet containing new beneficiary data"
      },
      {
        "type": "assertion",
        "description": "Verify new data is imported correctly into the system and no duplication occurs"
      }
    ]
  },
  {
    "id": "TC011",
    "title": "Cancellation Management: Successful plan cancellation workflow",
    "description": "Verify unit user can cancel a beneficiary's health plan with workflow status changes and audit logging.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Login as unit user"
      },
      {
        "type": "action",
        "description": "Navigate to cancellation management page"
      },
      {
        "type": "action",
        "description": "Select an active beneficiary plan and initiate cancellation"
      },
      {
        "type": "action",
        "description": "Confirm cancellation details and submit"
      },
      {
        "type": "assertion",
        "description": "Verify cancellation status updates correctly and audit trail entry is created"
      }
    ]
  },
  {
    "id": "TC012",
    "title": "Course Management: Create and publish a new course",
    "description": "Validate that matrix users can create a new course with multimedia content and publish it for unit consumption.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Login as matrix user"
      },
      {
        "type": "action",
        "description": "Navigate to course creation page"
      },
      {
        "type": "action",
        "description": "Fill in course details, upload multimedia content, and set publishing parameters"
      },
      {
        "type": "action",
        "description": "Submit the course creation form"
      },
      {
        "type": "assertion",
        "description": "Verify course is created successfully and appears in the course list ready for unit access"
      }
    ]
  },
  {
    "id": "TC013",
    "title": "Course Management: Track learner progress and generate certificates",
    "description": "Verify that unit users can access courses, progress is tracked accurately, and certificates are generated upon completion.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Login as unit user"
      },
      {
        "type": "action",
        "description": "Navigate to learning platform and start a published course"
      },
      {
        "type": "action",
        "description": "Complete course modules and lessons"
      },
      {
        "type": "assertion",
        "description": "Verify progress tracking reflects completion and user can download/view certificate"
      }
    ]
  },
  {
    "id": "TC014",
    "title": "Company Management: Add and manage employee records",
    "description": "Test company management CRUD operations including adding employees and assigning responsibilities with validation.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Login as matrix user"
      },
      {
        "type": "action",
        "description": "Navigate to company management page"
      },
      {
        "type": "action",
        "description": "Add a new employee with valid details"
      },
      {
        "type": "action",
        "description": "Assign responsible roles and save changes"
      },
      {
        "type": "assertion",
        "description": "Verify employee is added correctly and role assignments persist"
      }
    ]
  },
  {
    "id": "TC015",
    "title": "Payment System: Successful checkout with multiple payment methods",
    "description": "Validate that users can complete checkout using supported payment methods and subscription plans, and payment statuses update correctly.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Login as unit user"
      },
      {
        "type": "action",
        "description": "Navigate to checkout page"
      },
      {
        "type": "action",
        "description": "Select a health plan subscription"
      },
      {
        "type": "action",
        "description": "Complete payment using different supported payment methods (e.g. credit card, boleto)"
      },
      {
        "type": "assertion",
        "description": "Verify payment succeeds and subscription status updates accordingly"
      }
    ]
  },
  {
    "id": "TC016",
    "title": "Payment System: Handle failed payment scenarios gracefully",
    "description": "Verify that failed payments (e.g. invalid card, insufficient funds) produce appropriate error messages and prevent subscription activation.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Begin checkout and enter invalid payment details"
      },
      {
        "type": "action",
        "description": "Attempt to process payment"
      },
      {
        "type": "assertion",
        "description": "Verify transaction is rejected, error message is displayed, and subscription remains inactive"
      }
    ]
  },
  {
    "id": "TC017",
    "title": "Notification System: Real-time alerts and notification history",
    "description": "Test the real-time notification system for delivery of sound alerts, push notifications, and persistence in notification history.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Login as any user"
      },
      {
        "type": "action",
        "description": "Trigger system event that causes notification (e.g., new enrollment)"
      },
      {
        "type": "assertion",
        "description": "Verify that notification is received in real-time with sound alert"
      },
      {
        "type": "action",
        "description": "Navigate to notifications history page"
      },
      {
        "type": "assertion",
        "description": "Verify that past notifications are listed with correct timestamps and content"
      }
    ]
  },
  {
    "id": "TC018",
    "title": "Reporting System: Generate and export reports accurately",
    "description": "Verify operational, financial, and capacity-building reports generate correctly with accurate data and export options function properly.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Login as matrix user"
      },
      {
        "type": "action",
        "description": "Navigate to reporting module"
      },
      {
        "type": "action",
        "description": "Generate various reports using different filters and time ranges"
      },
      {
        "type": "assertion",
        "description": "Verify report data matches underlying system data and metrics"
      },
      {
        "type": "action",
        "description": "Export reports in available formats (e.g. PDF, CSV)"
      },
      {
        "type": "assertion",
        "description": "Verify exported files are generated correctly and open without error"
      }
    ]
  },
  {
    "id": "TC019",
    "title": "API Management: Log capture and webhook monitoring",
    "description": "Verify that API logs capture requests and responses correctly and webhook statistics are accurately displayed in admin interface.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Login as admin user"
      },
      {
        "type": "action",
        "description": "Navigate to API logs and webhook stats pages"
      },
      {
        "type": "action",
        "description": "Send test API requests and trigger webhook events"
      },
      {
        "type": "assertion",
        "description": "Verify logs record calls with correct metadata and webhook stats update accordingly"
      }
    ]
  },
  {
    "id": "TC020",
    "title": "Security: Access control and audit trails verification",
    "description": "Test that all sensitive data is protected by proper access controls according to user roles, and all critical actions generate audit logs.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Login as various user roles (matrix, unit, admin)"
      },
      {
        "type": "action",
        "description": "Attempt to access data and features outside permitted scope"
      },
      {
        "type": "assertion",
        "description": "Verify access is denied where appropriate"
      },
      {
        "type": "action",
        "description": "Perform critical actions (e.g., plan enrollment, cancellations, user management)"
      },
      {
        "type": "assertion",
        "description": "Verify that audit logs record these actions with user, timestamp, and action details"
      }
    ]
  },
  {
    "id": "TC021",
    "title": "UI Components: Responsive design and accessibility conformance",
    "description": "Verify that UI components render properly on different device screen sizes and comply with accessibility standards (aria, keyboard navigation).",
    "category": "ui",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Open key pages (dashboard, enrollment, course viewer) on desktop, tablet, and mobile viewports"
      },
      {
        "type": "assertion",
        "description": "Verify UI layouts adapt responsively without broken elements"
      },
      {
        "type": "action",
        "description": "Test keyboard navigation and screen reader support on form fields and controls"
      },
      {
        "type": "assertion",
        "description": "Verify that all interactive components are accessible and labeled properly"
      }
    ]
  }
]
