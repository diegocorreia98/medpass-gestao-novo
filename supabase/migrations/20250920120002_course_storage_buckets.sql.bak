-- Storage Buckets para Sistema de Cursos
-- Configuração de buckets para vídeos, materiais e certificados

-- ==================== CRIAR BUCKETS ====================

-- Bucket para vídeos dos cursos (privado - apenas com autenticação)
INSERT INTO storage.buckets (id, name, public) VALUES ('course-videos', 'course-videos', false);

-- Bucket para materiais complementares (público para downloads)
INSERT INTO storage.buckets (id, name, public) VALUES ('course-materials', 'course-materials', true);

-- Bucket para imagens de capa dos cursos (público)
INSERT INTO storage.buckets (id, name, public) VALUES ('course-images', 'course-images', true);

-- Bucket para certificados (privado)
INSERT INTO storage.buckets (id, name, public) VALUES ('certificates', 'certificates', false);

-- ==================== POLÍTICAS COURSE VIDEOS ====================

-- Matriz pode fazer upload de vídeos
CREATE POLICY "Matriz can upload course videos" 
ON storage.objects 
FOR INSERT 
WITH CHECK (
  bucket_id = 'course-videos' AND 
  EXISTS (
    SELECT 1 FROM profiles 
    WHERE user_id = auth.uid() AND user_type = 'matriz'
  )
);

-- Matriz pode gerenciar vídeos
CREATE POLICY "Matriz can manage course videos" 
ON storage.objects 
FOR ALL 
USING (
  bucket_id = 'course-videos' AND 
  EXISTS (
    SELECT 1 FROM profiles 
    WHERE user_id = auth.uid() AND user_type = 'matriz'
  )
);

-- Unidades podem visualizar vídeos (através de URLs assinadas)
CREATE POLICY "Unidades can view course videos" 
ON storage.objects 
FOR SELECT 
USING (
  bucket_id = 'course-videos' AND 
  EXISTS (
    SELECT 1 FROM profiles 
    WHERE user_id = auth.uid() AND user_type = 'unidade'
  )
);

-- ==================== POLÍTICAS COURSE MATERIALS ====================

-- Matriz pode fazer upload de materiais
CREATE POLICY "Matriz can upload course materials" 
ON storage.objects 
FOR INSERT 
WITH CHECK (
  bucket_id = 'course-materials' AND 
  EXISTS (
    SELECT 1 FROM profiles 
    WHERE user_id = auth.uid() AND user_type = 'matriz'
  )
);

-- Matriz pode gerenciar materiais
CREATE POLICY "Matriz can manage course materials" 
ON storage.objects 
FOR ALL 
USING (
  bucket_id = 'course-materials' AND 
  EXISTS (
    SELECT 1 FROM profiles 
    WHERE user_id = auth.uid() AND user_type = 'matriz'
  )
);

-- Materiais são públicos para download
CREATE POLICY "Materials are publicly accessible" 
ON storage.objects 
FOR SELECT 
USING (bucket_id = 'course-materials');

-- ==================== POLÍTICAS COURSE IMAGES ====================

-- Matriz pode fazer upload de imagens
CREATE POLICY "Matriz can upload course images" 
ON storage.objects 
FOR INSERT 
WITH CHECK (
  bucket_id = 'course-images' AND 
  EXISTS (
    SELECT 1 FROM profiles 
    WHERE user_id = auth.uid() AND user_type = 'matriz'
  )
);

-- Matriz pode gerenciar imagens
CREATE POLICY "Matriz can manage course images" 
ON storage.objects 
FOR ALL 
USING (
  bucket_id = 'course-images' AND 
  EXISTS (
    SELECT 1 FROM profiles 
    WHERE user_id = auth.uid() AND user_type = 'matriz'
  )
);

-- Imagens são públicas
CREATE POLICY "Course images are publicly accessible" 
ON storage.objects 
FOR SELECT 
USING (bucket_id = 'course-images');

-- ==================== POLÍTICAS CERTIFICATES ====================

-- Sistema pode criar certificados
CREATE POLICY "System can create certificates" 
ON storage.objects 
FOR INSERT 
WITH CHECK (bucket_id = 'certificates');

-- Usuários podem ver apenas seus certificados
CREATE POLICY "Users can view their own certificates" 
ON storage.objects 
FOR SELECT 
USING (
  bucket_id = 'certificates' AND 
  (storage.foldername(name))[1] = auth.uid()::text
);

-- Matriz pode ver todos os certificados
CREATE POLICY "Matriz can view all certificates" 
ON storage.objects 
FOR SELECT 
USING (
  bucket_id = 'certificates' AND 
  EXISTS (
    SELECT 1 FROM profiles 
    WHERE user_id = auth.uid() AND user_type = 'matriz'
  )
);
